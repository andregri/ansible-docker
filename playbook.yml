---
- name: Install docker and expose API
  gather_facts: false
  hosts: all
  become: true

  vars:
    user: vagrant

  tasks:
    - name: Install Docker and its dependencies
      ansible.builtin.include_role:
        name: docker

    - name: Expose Docker API over http
      ansible.builtin.lineinfile:
        path: /lib/systemd/system/docker.service
        regexp: 'ExecStart=/usr/bin/dockerd*'
        line: ExecStart=/usr/bin/dockerd -H tcp://0.0.0.0:4243 -H unix:///var/run/docker.sock
        owner: root
        group: root
        mode: '0644'

    - name: Start Docker service
      ansible.builtin.service:
        name: docker
        state: started
        enabled: true
      become: true

    - name: Add user vagrant to docker group
      ansible.builtin.user:
        name: "{{ user }}"
        groups: docker
        append: true
      become: true


- name: Init Docker swarm manager nodes
  hosts: managers
  become: true

  tasks:
    - name: Check if Swarm has already been Initialized
      ansible.builtin.command: docker node ls
      register: swarm_status
      ignore_errors: true
      changed_when: false

    - name: Initialize Docker Swarm
      community.general.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
      when: swarm_status.rc != 0
      run_once: true

    - name: Get the Manager join-token
      ansible.builtin.command: docker swarm join-token --quiet manager
      register: manager_token
      changed_when: false

    - name: Get the worker join-token
      ansible.builtin.command: docker swarm join-token --quiet worker
      register: worker_token
      changed_when: false

    - name: Add Managers to the Swarm
      community.general.docker_swarm:
        state: join
        advertise_addr: "{{ hostvars['manager-node']['ansible_default_ipv4']['address'] }}"
        join_token: "{{ hostvars['manager-node']['manager_token']['stdout'] }}"
        remote_addrs: "{{ hostvars['manager-node']['ansible_default_ipv4']['address'] }}:2377"
      when: swarm_status.rc != 0


- name: Init Docker swarm worker nodes
  hosts: workers
  become: true

  tasks:
    - name: Add Workers to the Swarm
      community.general.docker_swarm:
        state: join
        advertise_addr: "{{ ansible_host }}"
        join_token: "{{ hostvars['manager-node']['worker_token']['stdout'] }}"
        remote_addrs: ["{{ hostvars['manager-node']['ansible_facts']['eth1']['ipv4']['address'] }}:2377"]
